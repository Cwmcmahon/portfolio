[
  {
    "objectID": "posts/transit_costs/transit_costs.html",
    "href": "posts/transit_costs/transit_costs.html",
    "title": "Transit Infrastracture Costs per KM",
    "section": "",
    "text": "This app uses data from the 2021 Week 2 Tidy Tuesday event. It builds on the work of GitHub users jsakaluk and javendano58.\n\n\nPeek behind the curtain!\nknitr::include_app(\"https://cartermcmahon.shinyapps.io/Transit_Project/\", height = \"600\")"
  },
  {
    "objectID": "posts/steam/steam.html",
    "href": "posts/steam/steam.html",
    "title": "Popularity of Steam Games",
    "section": "",
    "text": "This interactive table uses data from the 2021 Week 12 Tidy Tuesday event.\n\n\nPeek behind the curtain!\ngames <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-03-16/games.csv') %>%\n  select(-avg_peak_perc) %>%\n  mutate(year = factor(year), month = factor(month, levels = month.name)) %>%\n  group_by(year) %>%\n  top_n(1000)\n\ngames %>% \n  select(`Game` = gamename, \n         `Year` = year,\n         `Month` = month, \n         `Average Player Count` = avg, \n         `Peak Player Count` = peak) %>%\n  datatable(filter = \"top\", extensions = 'Buttons', \n            options = list(\n              dom = 'Bfrtip',\n              pageLength = 10,\n              lengthMenu = c(10, 20, 50),\n              buttons = c('copy', 'csv', 'excel'),\n              order = (list(list(2, 'desc'), list(3, 'desc'), list(4, 'desc'),  list(1, 'asc')))\n              )\n            )\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nBache, Stefan Milton, and Hadley Wickham. 2022. Magrittr: A Forward-Pipe Operator for r. https://CRAN.R-project.org/package=magrittr.\n\n\nMüller, Kirill, and Hadley Wickham. 2022. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\n———. 2022a. Forcats: Tools for Working with Categorical Variables (Factors). https://CRAN.R-project.org/package=forcats.\n\n\n———. 2022b. Stringr: Simple, Consistent Wrappers for Common String Operations. https://CRAN.R-project.org/package=stringr.\n\n\n———. 2022c. Tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, and Dewey Dunnington. 2022. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis Vaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, and Lionel Henry. 2023. Purrr: Functional Programming Tools. https://CRAN.R-project.org/package=purrr.\n\n\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2022. Readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr.\n\n\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2023. Tidyr: Tidy Messy Data. https://CRAN.R-project.org/package=tidyr.\n\n\nXie, Yihui, Joe Cheng, and Xianying Tan. 2023. DT: A Wrapper of the JavaScript Library DataTables. https://github.com/rstudio/DT."
  },
  {
    "objectID": "posts/bees/bees.html",
    "href": "posts/bees/bees.html",
    "title": "Bee Populations",
    "section": "",
    "text": "This app uses data from the 2022 Week 2 Tidy Tuesday event. It was built in collaboration with Karyn Brehmeyer.\n\n\nPeek behind the curtain!\nknitr::include_app(\"https://cartermcmahon.shinyapps.io/bee_safe/\", height = \"700\")"
  },
  {
    "objectID": "posts/fabtcg/fabtcg.html",
    "href": "posts/fabtcg/fabtcg.html",
    "title": "Flesh and Blood TCG",
    "section": "",
    "text": "This is a poster I made for a Data Engineering course. The database I constructed for the project is outlined in an Entity Relationship Diagram at the bottom of the poster."
  },
  {
    "objectID": "posts/travel_emissions/travel_emissions.html",
    "href": "posts/travel_emissions/travel_emissions.html",
    "title": "UK Travel Emissions",
    "section": "",
    "text": "This graphic was made using data from the UK Department for Business, Energy & Industrial Strategy, which I accessed through Our World in Data.\n\n\nPeek behind the curtain!\nemissions_data <- read_csv(\"./travel_emissions.csv\")\n\nemissions_gg <- emissions_data %>%\n  filter(!grepl(\"\\\\d\", mode) &\n         !grepl(\"\\\\+\", mode)) %>%\n  ggplot(aes(x = emissions, \n             y = reorder(mode, emissions),\n             fill = category)) +\n    geom_col_interactive(aes(tooltip = paste(\"Emissions:\", emissions, sep = \" \"),\n                             data_id = mode),\n                         hover_nearest = TRUE) +\n    scale_fill_manual(name = \"Category\",\n                      values = c(\"Air\" = \"#E69F00\",\n                                  \"Rail\" = \"#009E73\",\n                                  \"Road\" = \"#CC79A7\",\n                                  \"Water\" = \"#0072B2\")) +\n    theme_minimal() +\n    labs(x = \"Emissions (in grams of CO2 per passenger km)\", \n         y = \"Mode of transport\", \n         title = \"Emissions for Modes of Transport in the UK\") +\n    theme(panel.grid.major.y = element_blank())\n\ngirafe(ggobj = emissions_gg,\n       options = list(\n         opts_hover(css = \"fill:gray\")\n         )\n)\n\n\n\n\n\n\n\n\n\n\nReferences\n\nBache, Stefan Milton, and Hadley Wickham. 2022. Magrittr: A Forward-Pipe Operator for r. https://CRAN.R-project.org/package=magrittr.\n\n\nGohel, David, and Panagiotis Skintzos. 2023. Ggiraph: Make Ggplot2 Graphics Interactive. https://davidgohel.github.io/ggiraph/.\n\n\nMüller, Kirill, and Hadley Wickham. 2022. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\n———. 2022a. Forcats: Tools for Working with Categorical Variables (Factors). https://CRAN.R-project.org/package=forcats.\n\n\n———. 2022b. Stringr: Simple, Consistent Wrappers for Common String Operations. https://CRAN.R-project.org/package=stringr.\n\n\n———. 2022c. Tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, and Dewey Dunnington. 2022. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis Vaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, and Lionel Henry. 2023. Purrr: Functional Programming Tools. https://CRAN.R-project.org/package=purrr.\n\n\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2022. Readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr.\n\n\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2023. Tidyr: Tidy Messy Data. https://CRAN.R-project.org/package=tidyr."
  },
  {
    "objectID": "posts/food/food.html",
    "href": "posts/food/food.html",
    "title": "Environmental Impact of Foods",
    "section": "",
    "text": "This table shows the amount of emissions per kg of food produced for a variety of food products.\n\n\nPeek behind the curtain!\nfood_data <- read_csv('Food_Product_Emissions.csv') %>%\n  rename(`Total Global Average` = `Total Global Average GHG Emissions per kg`) %>%\n  rename(`Food Product` = `Food product`) %>%\n  select(-`Unit of GHG Emissions`)\n\nfood_table <- food_data %>% \n  gt() %>%\n  tab_header(title = \"Greenhouse Gas Emissions by Food Product\",\n             subtitle = \"Measured in kg of CO2 equivalents per kg of food produced\") %>%\n  tab_source_note(source_note = \"Source: AmandaRoseKnudsen on Kaggle - https://www.kaggle.com/datasets/amandaroseknudsen/foodproductemissions\") %>%\n  opt_stylize(style = 6) %>%\n  data_color(columns = `Total from Land to Retail`, \n             colors = col_quantile(palette = c(\"Reds\"),\n                                   domain = NULL,\n                                   n = 3),\n             alpha = 0.75) %>%\n  cols_move(columns = `Total from Land to Retail`, after = `Food Product`) %>%\n  cols_align(align = \"center\") %>%\n  cols_hide(`Total Global Average`)\n\nfood_table\n\n\n\n\n\n\n  \n    \n      Greenhouse Gas Emissions by Food Product\n    \n    \n      Measured in kg of CO2 equivalents per kg of food produced\n    \n  \n  \n    \n      Food Product\n      Total from Land to Retail\n      Land Use Change\n      Feed\n      Farm\n      Processing\n      Transport\n      Packaging\n      Retail\n    \n  \n  \n    Apples\n0.357\n-0.029\n0.000\n0.225\n0.004\n0.096\n0.044\n0.017\n    Bananas\n0.678\n-0.025\n0.000\n0.266\n0.059\n0.292\n0.065\n0.021\n    Barley\n1.109\n0.009\n0.000\n0.176\n0.128\n0.035\n0.497\n0.264\n    Beef (beef herd)\n59.570\n16.278\n1.878\n39.388\n1.269\n0.346\n0.247\n0.164\n    Beef (dairy herd)\n21.085\n0.906\n2.508\n15.689\n1.108\n0.424\n0.268\n0.182\n    Beet Sugar\n1.536\n0.000\n0.000\n0.536\n0.242\n0.629\n0.090\n0.039\n    Berries & Grapes\n1.214\n0.025\n0.000\n0.722\n0.000\n0.238\n0.212\n0.017\n    Brassicas\n0.437\n0.002\n0.000\n0.278\n0.000\n0.095\n0.045\n0.017\n    Cane Sugar\n2.672\n1.247\n0.000\n0.485\n0.037\n0.784\n0.083\n0.036\n    Cassava\n0.987\n0.589\n0.000\n0.220\n0.000\n0.094\n0.045\n0.039\n    Cheese\n21.240\n4.455\n2.346\n13.059\n0.738\n0.138\n0.172\n0.332\n    Citrus Fruit\n0.317\n-0.146\n0.000\n0.307\n0.000\n0.094\n0.045\n0.017\n    Coffee\n16.477\n3.688\n0.000\n10.386\n0.592\n0.130\n1.630\n0.051\n    Dark Chocolate\n18.681\n14.308\n0.000\n3.706\n0.185\n0.061\n0.400\n0.021\n    Eggs\n4.507\n0.709\n2.200\n1.317\n0.000\n0.084\n0.161\n0.036\n    Fish (farmed)\n5.183\n0.534\n0.819\n3.598\n0.020\n0.111\n0.061\n0.040\n    Groundnuts\n2.497\n0.439\n0.000\n1.425\n0.372\n0.120\n0.099\n0.042\n    Lamb & Mutton\n24.415\n0.468\n2.370\n19.508\n1.111\n0.490\n0.251\n0.217\n    Maize\n0.988\n0.315\n0.000\n0.475\n0.052\n0.060\n0.060\n0.026\n    Milk\n2.781\n0.495\n0.236\n1.458\n0.149\n0.090\n0.097\n0.256\n    Nuts\n0.278\n-2.052\n0.000\n2.126\n0.032\n0.067\n0.078\n0.027\n    Oatmeal\n1.575\n0.001\n0.000\n1.370\n0.042\n0.067\n0.066\n0.029\n    Olive Oil\n5.944\n-0.377\n0.000\n4.272\n0.660\n0.482\n0.861\n0.046\n    Onions & Leeks\n0.395\n0.005\n0.000\n0.211\n0.000\n0.095\n0.045\n0.039\n    Other Fruit\n0.750\n0.126\n0.000\n0.369\n0.015\n0.182\n0.042\n0.016\n    Other Pulses\n1.610\n0.033\n0.000\n1.089\n0.000\n0.096\n0.353\n0.039\n    Other Vegetables\n0.455\n0.001\n0.000\n0.174\n0.060\n0.164\n0.041\n0.015\n    Palm Oil\n7.605\n3.096\n0.000\n2.107\n1.264\n0.208\n0.886\n0.044\n    Peas\n0.896\n0.000\n0.000\n0.717\n0.000\n0.095\n0.045\n0.039\n    Pig Meat\n7.282\n1.535\n2.940\n1.694\n0.284\n0.343\n0.296\n0.190\n    Potatoes\n0.370\n-0.001\n0.000\n0.193\n0.000\n0.094\n0.045\n0.039\n    Poultry Meat\n6.092\n2.540\n1.775\n0.672\n0.440\n0.276\n0.212\n0.177\n    Rapeseed Oil\n3.828\n0.212\n0.000\n2.343\n0.193\n0.190\n0.844\n0.046\n    Rice\n3.839\n-0.022\n0.000\n3.553\n0.065\n0.096\n0.084\n0.063\n    Root Vegetables\n0.365\n0.013\n0.000\n0.154\n0.000\n0.114\n0.045\n0.039\n    Shrimps (farmed)\n11.854\n0.206\n2.510\n8.379\n0.000\n0.206\n0.334\n0.219\n    Soybean Oil\n6.117\n3.096\n0.000\n1.519\n0.311\n0.299\n0.849\n0.043\n    Soymilk\n0.914\n0.180\n0.000\n0.093\n0.163\n0.110\n0.098\n0.270\n    Sunflower Oil\n3.607\n0.133\n0.000\n2.148\n0.229\n0.201\n0.853\n0.043\n    Tofu\n2.871\n0.958\n0.000\n0.495\n0.794\n0.177\n0.177\n0.270\n    Tomatoes\n1.427\n0.372\n0.000\n0.704\n0.012\n0.177\n0.145\n0.017\n    Wheat & Rye\n1.441\n0.100\n0.000\n0.847\n0.217\n0.129\n0.090\n0.058\n    Wine\n1.585\n-0.061\n0.000\n0.626\n0.139\n0.093\n0.749\n0.039\n  \n  \n    \n      Source: AmandaRoseKnudsen on Kaggle - https://www.kaggle.com/datasets/amandaroseknudsen/foodproductemissions\n    \n  \n  \n\n\n\n\n\n\n\n\nReferences\n\nBache, Stefan Milton, and Hadley Wickham. 2022. Magrittr: A Forward-Pipe Operator for r. https://CRAN.R-project.org/package=magrittr.\n\n\nfile., See AUTHORS. 2022. Paletteer: Comprehensive Collection of Color Palettes. https://github.com/EmilHvitfeldt/paletteer.\n\n\nIannone, Richard, Joe Cheng, Barret Schloerke, Ellis Hughes, and JooYoung Seo. 2022. Gt: Easily Create Presentation-Ready Display Tables. https://CRAN.R-project.org/package=gt.\n\n\nMüller, Kirill, and Hadley Wickham. 2022. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\n———. 2022a. Forcats: Tools for Working with Categorical Variables (Factors). https://CRAN.R-project.org/package=forcats.\n\n\n———. 2022b. Stringr: Simple, Consistent Wrappers for Common String Operations. https://CRAN.R-project.org/package=stringr.\n\n\n———. 2022c. Tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, and Dewey Dunnington. 2022. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis Vaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, and Lionel Henry. 2023. Purrr: Functional Programming Tools. https://CRAN.R-project.org/package=purrr.\n\n\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2022. Readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr.\n\n\nWickham, Hadley, and Dana Seidel. 2022. Scales: Scale Functions for Visualization. https://CRAN.R-project.org/package=scales.\n\n\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2023. Tidyr: Tidy Messy Data. https://CRAN.R-project.org/package=tidyr."
  },
  {
    "objectID": "posts/bart/bart.html",
    "href": "posts/bart/bart.html",
    "title": "Bart Ridership",
    "section": "",
    "text": "Peek behind the curtain!\n# Reading in the CSV file with average yearly entries for the 5 most frequented stations in 2022\nentries_coord <- read.csv(\"./entries_coord.csv\")\n\n# Reading in the KMZ file with BART station info, and altering it to match the above\nstations <- st_read(\"./BART_System_2020.kmz\") %>% \n  mutate(Name = str_replace(Name, \"St\", \"Street\"),\n         Name = case_when(Name == \"19th Street/Oakland\" ~ \"19th Street Oakland\",\n                          Name == \"12th Street/Oakland City Center\" ~ \"12th Street Oakland City Center\",\n                          Name == \"16th Street/Mission\" ~ \"16th Street Mission\",\n                          Name == \"24th Street/Mission\" ~ \"24th Street Mission\",\n                          TRUE ~ Name)) %>%\n  filter(Name != \"Coliseum/Airport Connector\" & \n           Name != \"eBART Transfer\" &\n           !(Name %in% entries_coord$origin)\n)\n\n# Reading in CSV file with route info\nroutes <- read.csv(\"./routes.csv\")\n\n# Creating an SF object from the route data\nsetDT(routes)\nsf <- routes[\n  , {\n    geometry <- st_linestring(x = matrix(c(orig_lng, orig_lat, dest_lng, dest_lat), ncol = 2, byrow = T))\n    geometry <- st_sfc(geometry)\n    geometry <- st_sf(geometry = geometry)\n  }\n  , by = idx\n]\nsf <- st_as_sf(sf) %>% cbind(route = routes$route, origin = routes$origin, destination = routes$destination)\n\n# Setting map info\nmyLAT <- 37.799087467604025\nmyLNG <- -122.35496898239143\nmyZOOM <- 12\nmyTILES <- \"CartoDB.Positron\"\n\n# Specifying the color palette for Leaflet\npal <- colorFactor(c(\"#CC79A7\", \"#D55E00\", \"#E69F00\", \"#009E73\", \"#0072B2\"), \n                   domain = entries_coord$origin %>% unique())\n\n# Making the shared data for crosstalk\nshared_entries <- SharedData$new(entries_coord, ~id)\n\n\nAbove, you’ll find the setup code for the interactive graphic on this page. Below, you’ll see the graphic and my code for making it. This graphic uses ridership and geospatial data from BART.\n\n\nPeek behind the curtain!\nbscols(widths = c(2, NA, NA),\n       list(filter_checkbox(\"routes\", \"Select From the 5 Most Frequented Origin Stations\", shared_entries, ~origin)),\n        plot_ly(shared_entries, \n                x = ~year, y = ~total_riders, \n                color = ~origin, colors = c(\"#CC79A7\", \"#D55E00\", \"#E69F00\", \"#009E73\", \"#0072B2\"), \n                name = ~origin, \n                type = \"scatter\", mode = \"line\",\n                width=\"100%\", height=750) %>%\n         layout(xaxis = list(title = 'Year'),\n                yaxis = list(title = 'Total Number of Entering Riders')),\n       leaflet(shared_entries, width=\"100%\", height=750) %>% \n         addProviderTiles(myTILES) %>%\n         setView(myLNG, myLAT, zoom = myZOOM) %>%\n         addPolylines(data = sf, color = \"#1A1A1A\") %>%\n         addCircleMarkers(data = stations, label = ~Name, color = \"#1A1A1A\", fillOpacity = 0.7) %>%\n         addCircleMarkers(label = ~origin, color = ~pal(origin), fillOpacity = 0.5)\n)\n\n\n\n\n\n\nSelect From the 5 Most Frequented Origin Stations\n\n\n\n\n16th Street Mission\n\n\n\n\n\nCivic Center/UN Plaza\n\n\n\n\n\nEmbarcadero\n\n\n\n\n\nMontgomery Street\n\n\n\n\n\nPowell Street\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nBache, Stefan Milton, and Hadley Wickham. 2022. Magrittr: A Forward-Pipe Operator for r. https://CRAN.R-project.org/package=magrittr.\n\n\nCheng, Joe, Bhaskar Karambelkar, and Yihui Xie. 2022. Leaflet: Create Interactive Web Maps with the JavaScript Leaflet Library. https://rstudio.github.io/leaflet/.\n\n\nCheng, Joe, and Carson Sievert. 2021. Crosstalk: Inter-Widget Interactivity for HTML Widgets. https://rstudio.github.io/crosstalk/.\n\n\nDowle, Matt, and Arun Srinivasan. 2022. Data.table: Extension of ‘Data.frame‘. https://CRAN.R-project.org/package=data.table.\n\n\nMüller, Kirill, and Hadley Wickham. 2022. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble.\n\n\nPebesma, Edzer. 2018. “Simple Features for R: Standardized Support for Spatial Vector Data.” The R Journal 10 (1): 439–46. https://doi.org/10.32614/RJ-2018-009.\n\n\n———. 2022. Sf: Simple Features for r. https://CRAN.R-project.org/package=sf.\n\n\nSievert, Carson. 2020. Interactive Web-Based Data Visualization with r, Plotly, and Shiny. Chapman; Hall/CRC. https://plotly-r.com.\n\n\nSievert, Carson, Chris Parmer, Toby Hocking, Scott Chamberlain, Karthik Ram, Marianne Corvellec, and Pedro Despouy. 2022. Plotly: Create Interactive Web Graphics via Plotly.js. https://CRAN.R-project.org/package=plotly.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\n———. 2022a. Forcats: Tools for Working with Categorical Variables (Factors). https://CRAN.R-project.org/package=forcats.\n\n\n———. 2022b. Stringr: Simple, Consistent Wrappers for Common String Operations. https://CRAN.R-project.org/package=stringr.\n\n\n———. 2022c. Tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\nWickham, Hadley, and Jennifer Bryan. 2022. Readxl: Read Excel Files. https://CRAN.R-project.org/package=readxl.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, and Dewey Dunnington. 2022. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis Vaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, and Lionel Henry. 2023. Purrr: Functional Programming Tools. https://CRAN.R-project.org/package=purrr.\n\n\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2022. Readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr.\n\n\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2023. Tidyr: Tidy Messy Data. https://CRAN.R-project.org/package=tidyr."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Carter’s portfolio is under construction.",
    "section": "",
    "text": "Bart Ridership\n\n\n\nInteractive\n\n\nTransit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBee Populations\n\n\n\nInteractive\n\n\nEnvironment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnvironmental Impact of Foods\n\n\n\nTable\n\n\nEnvironment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFlesh and Blood TCG\n\n\n\nPoster\n\n\nGames\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPopularity of Steam Games\n\n\n\nTable\n\n\nGames\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTransit Infrastracture Costs per KM\n\n\n\nInteractive\n\n\nTransit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUK Travel Emissions\n\n\n\nInteractive\n\n\nTransit\n\n\nEnvironment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Carter is a student at Willamette University’s Master’s in Data Science program, and he is set to graduate in August 2023. He is also, in descending order of personal importance, a:\n\nfiance\nproponent of FOSS\nplayer of board & video games\n…\n(everything else)\n…\nScorpio\n\nCarter is looking for a job at the moment, so if you are a potential employer interested in hiring him please reach out at his gmail address: carterwmcmahon."
  }
]